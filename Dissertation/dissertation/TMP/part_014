<tex2html_file>#./chpt8.tex#
\chapter<<6540>>Results<<6540>>
\label<<6541>>chpt:results<<6541>>
\section<<6542>>Introduction<<6542>>
In the previous chapter the FAP PSO algorithm was discussed. This algorithm was developed by modifying the standard PSO algorithm to operate on the FS-FAP. Thus far, no other PSO algorithms have been attempted on the FS-FAP. The only PSO algorithm that has been attempted in the FAP domain was discussed in chapter~\ref<<6543>>chpt:swarm<<6543>> and was not relevant to the study in this dissertation, as the PSO was applied to an entirely different FAP variant (MS-FAP). The PSO on the MS-FAP was not relevant because the performance measures and what the algorithms optimise differ.
\begin<<6654>>tex2html_deferred<<6654>>\par\end<<6655>>tex2html_deferred<<6655>>
With the FS-FAP, the main performance measurement is interference and the PSO aims to allocate frequencies in an optimal way to internally produce a frequency plan. On the other hand, the MS-FAP is concerned with the span of frequencies used and the performance measurement is based on the calls dropped. The main purpose of the PSO in the MS-FAP is to minimise the span of frequencies used and keep the number of dropped calls to a minimum.
\begin<<6656>>tex2html_deferred<<6656>>\par\end<<6657>>tex2html_deferred<<6657>>
In the previous chapter all the modifications that were made to the standard PSO were discussed. The modifications were made to enable to PSO to operate on the FAP. Two velocity methods were developed and in addition to the standard global best selection scheme, two additional global best selection schemes were put forward. The algorithm presented was benchmarked against the Siemens instances of the COST 259 benchmark.
\begin<<6658>>tex2html_deferred<<6658>>\par\end<<6659>>tex2html_deferred<<6659>>
In this chapter the results are given of applying the FAP PSO algorithm with its different velocity methods as well as different global selection schemes. This is followed by how the different velocity methods affected the PSO performance as well as how the global selection schemes affected the final produces results.
\begin<<6660>>tex2html_deferred<<6660>>\par\end<<6661>>tex2html_deferred<<6661>>
\section<<6544>>PSO COST 259 Siemens Results<<6544>>
The PSO was applied to the benchmarks on the following machine and frameworks:
\begin<<6545>>itemize<<6545>>
\item 4 GB RAM
\item Windows 7
\item Intel Quad Core CPU
\item C\# using .Net 4 Framework with Parallel Extensions
\end<<6546>>itemize<<6546>>
The FAP PSO was applied to Siemens1, Siemens2, Siemens3 and Siemen4 of the COST 259 benchmark suite. For more information about the nature of the benchmarks, the reader is directed to section \ref<<6547>>sec:COST259<<6547>>.
\begin<<6662>>tex2html_deferred<<6662>>\par\end<<6663>>tex2html_deferred<<6663>>
For each benchmark, 12 results are presented. The following changes were made to the FAP PSO to obtain 12 different results:
\begin<<6548>>itemize<<6548>>
\item The two velocity methods that were developed for the PSO were tested.
\item Each velocity method also used the three different global best mechanisms that were developed.
\item The swarm size was set to 20, 50, 100, 500.
\item Inertia was set to 0.5.
\item Cognitive coefficient was set to 0.4.
\item Social coefficient was set to 0.5.
\item Each variant of FAP PSO was allowed 15 minutes on each of the benchmarks.
\end<<6549>>itemize<<6549>>
The velocity methods and global selection schemes were discussed in the previous chapter.
\begin<<6664>>tex2html_deferred<<6664>>\par\end<<6665>>tex2html_deferred<<6665>>
In the following sections the results obtained are tabulated.
\subsection<<6550>>Siemens1<<6550>>
In table~\ref<<6551>>tab:siem1m1<<6551>> the results obtained using the FAP PSO with velocity method 1. In table~\ref<<6552>>tab:siem1m2<<6552>> presents the results for the FAP PSO that used velocity method 2.
\begin<<6553>>table<<6553>>[H]
\begin<<6666>>tex2html_deferred<<6666>>\centering\end<<6667>>tex2html_deferred<<6667>>
	\begin<<6554>>tabular<<6554>><<6555>>| c | c | c | c |<<6555>>
	\hline
	GBest selection ;SPMamp; Population ;SPMamp; Interference\\  \hline
	Standard ;SPMamp; 20 ;SPMamp; 106.855\\  \hline
	Built with cells ;SPMamp; 20 ;SPMamp; 39.945\\  \hline
	Built with TRXs ;SPMamp; 20 ;SPMamp; 114.121\\  \hline
	Standard ;SPMamp; 50 ;SPMamp; 102.666\\  \hline
	Built with cells ;SPMamp; 50 ;SPMamp; \textbf<<6556>>34.689<<6556>>\\  \hline
	Built with TRXs ;SPMamp; 50 ;SPMamp; 116.150\\  \hline
	Standard ;SPMamp; 100 ;SPMamp; 104.649\\  \hline
	Built with cells ;SPMamp; 100 ;SPMamp; 38.252\\  \hline
	Built with TRXs ;SPMamp; 100 ;SPMamp; 126.630\\  \hline
	Standard ;SPMamp; 500 ;SPMamp; 106.132\\  \hline
	Built with cells ;SPMamp; 500 ;SPMamp; 44.171\\  \hline
	Built with TRXs ;SPMamp; 500 ;SPMamp; 118.911\\  \hline
	\end<<6557>>tabular<<6557>>
	\begin<<6668>>tex2html_deferred<<6668>>\caption<<6558>>Siemens1 results using velocity method 1<<6558>>\end<<6669>>tex2html_deferred<<6669>>
	\label<<6559>>tab:siem1m1<<6559>>
\end<<6560>>table<<6560>>
\begin<<6561>>table<<6561>>[H]
\begin<<6670>>tex2html_deferred<<6670>>\centering\end<<6671>>tex2html_deferred<<6671>>
	\begin<<6562>>tabular<<6562>><<6563>>| c | c | c | c |<<6563>>
	\hline
	GBest selection ;SPMamp; Population ;SPMamp; Interference\\  \hline
	Standard ;SPMamp; 20 ;SPMamp; 817.161\\  \hline
	Built with cells ;SPMamp; 20 ;SPMamp; 336.102\\  \hline
	Built with TRXs ;SPMamp; 20 ;SPMamp; 312.120\\  \hline
	Standard ;SPMamp; 50 ;SPMamp; 637.030\\  \hline
	Built with cells ;SPMamp; 50 ;SPMamp; 258.049\\  \hline
	Built with TRXs ;SPMamp; 50 ;SPMamp; 217.247\\  \hline
	Standard ;SPMamp; 100 ;SPMamp; 517.347\\  \hline
	Built with cells ;SPMamp; 100 ;SPMamp; 252.827\\  \hline
	Built with TRXs ;SPMamp; 100 ;SPMamp; 197.421\\  \hline
	Standard ;SPMamp; 500 ;SPMamp; 272.717\\  \hline
	Built with cells ;SPMamp; 500 ;SPMamp; \textbf<<6564>>123.427<<6564>>\\  \hline
	Built with TRXs ;SPMamp; 500 ;SPMamp; 141.060\\  \hline
	\end<<6565>>tabular<<6565>>
	\begin<<6672>>tex2html_deferred<<6672>>\caption<<6566>>Siemens1 results with velocity method 2<<6566>>\end<<6673>>tex2html_deferred<<6673>>
	\label<<6567>>tab:siem1m2<<6567>>
\end<<6568>>table<<6568>>
\subsection<<6569>>Siemens2<<6569>>
Below the results obtained by applying FAP PSO on the siemens2 benchmark is presented in table~\ref<<6570>>tab:siem2m1<<6570>> and table~\ref<<6571>>tab:siem2m2<<6571>>.
\begin<<6572>>table<<6572>>[H]
\begin<<6674>>tex2html_deferred<<6674>>\centering\end<<6675>>tex2html_deferred<<6675>>
	\begin<<6573>>tabular<<6573>><<6574>>| c | c | c | c |<<6574>>
	\hline
	GBest selection ;SPMamp; Population ;SPMamp; Interference\\  \hline
	Standard ;SPMamp; 20 ;SPMamp; 76.199\\  \hline
	Built with cells ;SPMamp; 20 ;SPMamp; 55.051\\  \hline
	Built with TRXs ;SPMamp; 20 ;SPMamp; 82.262\\  \hline
	Standard ;SPMamp; 50 ;SPMamp; 78.181\\  \hline
	Built with cells ;SPMamp; 50 ;SPMamp; 55.488\\  \hline
	Built with TRXs ;SPMamp; 50 ;SPMamp; 81.076\\  \hline
	Standard ;SPMamp; 100 ;SPMamp; 77.511\\  \hline
	Built with cells ;SPMamp; 100 ;SPMamp; 55.436\\  \hline
	Built with TRXs ;SPMamp; 100 ;SPMamp; 82.857\\  \hline
	Standard ;SPMamp; 500 ;SPMamp; 77.104\\  \hline
	Built with cells ;SPMamp; 500 ;SPMamp; \textbf<<6575>>54.880<<6575>>\\  \hline
	Built with TRXs ;SPMamp; 500 ;SPMamp; 86.794\\  \hline
	\end<<6576>>tabular<<6576>>
\begin<<6676>>tex2html_deferred<<6676>>\caption<<6577>>Siemens2 results with velocity method 1<<6577>>\end<<6677>>tex2html_deferred<<6677>>
\label<<6578>>tab:siem2m1<<6578>>
\end<<6579>>table<<6579>>
\begin<<6580>>table<<6580>>[H]
\begin<<6678>>tex2html_deferred<<6678>>\centering\end<<6679>>tex2html_deferred<<6679>>
	\begin<<6581>>tabular<<6581>><<6582>>| c | c | c | c |<<6582>>
	\hline
	GBest selection ;SPMamp; Population ;SPMamp; Interference\\  \hline
	Standard ;SPMamp; 20 ;SPMamp; 217.025\\  \hline
	Built with cells ;SPMamp; 20 ;SPMamp; 316.679\\  \hline
	Built with TRXs ;SPMamp; 20 ;SPMamp; 111.535\\  \hline
	Standard ;SPMamp; 50 ;SPMamp; 240.186\\  \hline
	Built with cells ;SPMamp; 50 ;SPMamp; 197.572\\  \hline
	Built with TRXs ;SPMamp; 50 ;SPMamp; 103.896\\  \hline
	Standard ;SPMamp; 100 ;SPMamp; 228.486\\  \hline
	Built with cells ;SPMamp; 100 ;SPMamp; 195.921\\  \hline
	Built with TRXs ;SPMamp; 100 ;SPMamp; 100.298\\  \hline
	Standard ;SPMamp; 500 ;SPMamp; 236.228\\  \hline
	Built with cells ;SPMamp; 500 ;SPMamp; \textbf<<6583>>96.605<<6583>>\\  \hline
	Built with TRXs ;SPMamp; 500 ;SPMamp; 96.832\\  \hline
	\end<<6584>>tabular<<6584>>
\begin<<6680>>tex2html_deferred<<6680>>\caption<<6585>>Siemens2 results with velocity method 2<<6585>>\end<<6681>>tex2html_deferred<<6681>>
\label<<6586>>tab:siem2m2<<6586>>
\end<<6587>>table<<6587>>
\subsection<<6588>>Siemens3<<6588>>
Table~\ref<<6589>>tab:siem3m1<<6589>> and table~\ref<<6590>>tab:siem3m2<<6590>> below present the results obtained by applying the FAP PSO algorithm to the siemens3 benchmark.
\begin<<6591>>table<<6591>>[H]
\begin<<6682>>tex2html_deferred<<6682>>\centering\end<<6683>>tex2html_deferred<<6683>>
	\begin<<6592>>tabular<<6592>><<6593>>| c | c | c | c |<<6593>>
	\hline
	GBest Selection ;SPMamp; Population ;SPMamp; Interference\\  \hline
	Standard ;SPMamp; 20 ;SPMamp; 135.078\\  \hline
	Built with cells ;SPMamp; 20 ;SPMamp; 50.543\\  \hline
	Built with TRXs ;SPMamp; 20 ;SPMamp; 141.538\\  \hline
	Standard ;SPMamp; 50 ;SPMamp; 138.418\\  \hline
	Built with cells ;SPMamp; 50 ;SPMamp; 51.300\\  \hline
	Built with TRXs ;SPMamp; 50 ;SPMamp; 144.444\\  \hline
	Standard ;SPMamp; 100 ;SPMamp; 138.774\\  \hline
	Built with cells ;SPMamp; 100 ;SPMamp; 50.652\\  \hline
	Built with TRXs ;SPMamp; 100 ;SPMamp; 157.552\\  \hline
	Standard ;SPMamp; 500 ;SPMamp; 141.105\\  \hline
	Built with cells ;SPMamp; 500 ;SPMamp; \textbf<<6594>>54.417<<6594>>\\  \hline
	Built with TRXs ;SPMamp; 500 ;SPMamp; 148.643\\  \hline
	\end<<6595>>tabular<<6595>>
\begin<<6684>>tex2html_deferred<<6684>>\caption<<6596>>Siemens3 result with velocity method 1<<6596>>\end<<6685>>tex2html_deferred<<6685>>
\label<<6597>>tab:siem3m1<<6597>>
\end<<6598>>table<<6598>>
\begin<<6599>>table<<6599>>[H]
\begin<<6686>>tex2html_deferred<<6686>>\centering\end<<6687>>tex2html_deferred<<6687>>
	\begin<<6600>>tabular<<6600>><<6601>>| c | c | c | c |<<6601>>
	\hline
	GBest Selection ;SPMamp; Population ;SPMamp; Interference\\  \hline
	Standard ;SPMamp; 20 ;SPMamp; 1104.006\\  \hline
	Built with cells ;SPMamp; 20 ;SPMamp; 415.866\\  \hline
	Built with TRXs ;SPMamp; 20 ;SPMamp; 460.403\\  \hline
	Standard ;SPMamp; 50 ;SPMamp; 2197.760\\  \hline
	Built with cells ;SPMamp; 50 ;SPMamp; 1014.373\\  \hline
	Built with TRXs ;SPMamp; 50 ;SPMamp; 1182.665\\  \hline
	Standard ;SPMamp; 100 ;SPMamp; 764.894\\  \hline
	Built with cells ;SPMamp; 100 ;SPMamp; 311.646\\  \hline
	Built with TRXs ;SPMamp; 100 ;SPMamp; 316.998\\  \hline
	Standard ;SPMamp; 500 ;SPMamp; 361.118\\  \hline
	Built with cells ;SPMamp; 500 ;SPMamp; \textbf<<6602>>167.185<<6602>>\\  \hline
	Built with TRXs ;SPMamp; 500 ;SPMamp; 186.705\\  \hline
	\end<<6603>>tabular<<6603>>
\begin<<6688>>tex2html_deferred<<6688>>\caption<<6604>>Siemens3 result with velocity method 2<<6604>>\end<<6689>>tex2html_deferred<<6689>>
\label<<6605>>tab:siem3m2<<6605>>
\end<<6606>>table<<6606>>
\subsection<<6607>>Siemens 4<<6607>>
\begin<<6608>>table<<6608>>[H]
\begin<<6690>>tex2html_deferred<<6690>>\centering\end<<6691>>tex2html_deferred<<6691>>
	\begin<<6609>>tabular<<6609>><<6610>>| c | c | c | c |<<6610>>
	\hline
	GBest Selection ;SPMamp; Population ;SPMamp; Interference\\  \hline
	Standard ;SPMamp; 20 ;SPMamp; 528.162\\  \hline
	Built with cells ;SPMamp; 20 ;SPMamp; 287.665\\  \hline
	Built with TRXs ;SPMamp; 20 ;SPMamp; 555.445\\  \hline
	Standard ;SPMamp; 50 ;SPMamp; 542.143\\  \hline
	Built with cells ;SPMamp; 50 ;SPMamp; \textbf<<6611>>283.473<<6611>>\\  \hline
	Built with TRXs ;SPMamp; 50 ;SPMamp; 557.154\\  \hline
	Standard ;SPMamp; 100 ;SPMamp; 541.617\\  \hline
	Built with cells ;SPMamp; 100 ;SPMamp; 293.238\\  \hline
	Built with TRXs ;SPMamp; 100 ;SPMamp; 551.930\\  \hline
	Standard ;SPMamp; 500 ;SPMamp; 538.812\\  \hline
	Built with cells ;SPMamp; 500 ;SPMamp; 302.441\\  \hline
	Built with TRXs ;SPMamp; 500 ;SPMamp; 582.992\\  \hline
	\end<<6612>>tabular<<6612>>
\begin<<6692>>tex2html_deferred<<6692>>\caption<<6613>>Siemens4 results using velocity method 1<<6613>>\end<<6693>>tex2html_deferred<<6693>>
\label<<6614>>tab:siem4m1<<6614>>
\end<<6615>>table<<6615>>
\begin<<6616>>table<<6616>>[H]
\begin<<6694>>tex2html_deferred<<6694>>\centering\end<<6695>>tex2html_deferred<<6695>>
	\begin<<6617>>tabular<<6617>><<6618>>| c | c | c | c |<<6618>>
	\hline
	GBest Selection ;SPMamp; Population ;SPMamp; Interference\\  \hline
	Standard ;SPMamp; 20 ;SPMamp; 2300.40\\  \hline
	Built with cells ;SPMamp; 20 ;SPMamp; 1091.827\\  \hline
	Built with TRXs ;SPMamp; 20 ;SPMamp; 2966.514\\  \hline
	Standard ;SPMamp; 50 ;SPMamp; 1877.781\\  \hline
	Built with cells ;SPMamp; 50 ;SPMamp; 2197.760\\  \hline
	Built with TRXs ;SPMamp; 50 ;SPMamp; 1014.373\\  \hline
	Standard ;SPMamp; 100 ;SPMamp; 1182.665\\  \hline
	Built with cells ;SPMamp; 100 ;SPMamp; 814.950\\  \hline
	Built with TRXs ;SPMamp; 100 ;SPMamp; 930.631\\  \hline
	Standard ;SPMamp; 500 ;SPMamp; 1934.260\\  \hline
	Built with cells ;SPMamp; 500 ;SPMamp; \textbf<<6619>>631.668<<6619>>\\  \hline
	Built with TRXs ;SPMamp; 500 ;SPMamp; 723.772\\  \hline
	\end<<6620>>tabular<<6620>>
\begin<<6696>>tex2html_deferred<<6696>>\caption<<6621>>Siemens4 results using velocity method 2<<6621>>\end<<6697>>tex2html_deferred<<6697>>
\label<<6622>>tab:siem4m2<<6622>>
\end<<6623>>table<<6623>>
\subsection<<6624>>Comparison with best results in COST259<<6624>>
Below the best results achieved by the FAP PSO is compared to the best results obtained with each siemens problem as published on the FAP website\cite<<6625>>FAPWeb<<6625>>.
\begin<<6626>>table<<6626>>[H]
\begin<<6698>>tex2html_deferred<<6698>>\centering\end<<6699>>tex2html_deferred<<6699>>
	\begin<<6627>>tabular<<6627>><<6628>>| c | c | c | c | c |<<6628>>
	\hline
	Algorithm ;SPMamp; Siemens1 ;SPMamp; Siemens2 ;SPMamp; Siemens3 ;SPMamp; Siemens4 \\  \hline
	FAP PSO ;SPMamp; 34.689 ;SPMamp; 54.880 ;SPMamp; 54.417 ;SPMamp; 283.473 \\  \hline
	k-thin FAP ;SPMamp; \textbf<<6629>>2.200<<6629>> ;SPMamp; \textbf<<6630>>14.271<<6630>> ;SPMamp; \textbf<<6631>>5.129<<6631>> ;SPMamp; \textbf<<6632>>77.246<<6632>> \\  \hline
	Dynamic Tabu Search ;SPMamp; --- ;SPMamp; 14.275 ;SPMamp; 5.186 ;SPMamp; 81.876 \\  \hline
	SAG FAP Tool ;SPMamp; 2.301 ;SPMamp; 14.751 ;SPMamp; 5.259 ;SPMamp; 80.967 \\  \hline
	\end<<6633>>tabular<<6633>>
\begin<<6700>>tex2html_deferred<<6700>>\caption<<6634>>FAP PSO results compared to best obtained results<<6634>>\end<<6701>>tex2html_deferred<<6701>>
\label<<6635>>tab:siem4m2<<6635>>
\end<<6636>>table<<6636>>
\section<<6637>>The Performance of the PSO<<6637>>
In this section the effects of the changes made to the FAP PSO algorithm in terms of the results is discussed. 
\begin<<6702>>tex2html_deferred<<6702>>\par\end<<6703>>tex2html_deferred<<6703>>
Firstly, the effect of the two developed velocity methods in terms of the results is described. In section~\ref<<6638>>sec:diffglobalschemes<<6638>> the three global schemes that are used by the algorithm are discussed. Finally this section concludes with the effect of a larger population size on solution quality rather than a small population.
\subsection<<6639>>Velocity Method 1 vs Method 2<<6639>>
The FAP PSO algorithm is able to utilise two different velocity methods to move the swarm around in the FAP space. The algorithms that implement these two methods were presented in section~\ref<<6640>>sec:velocityFAP<<6640>> and section~\ref<<6641>>sec:velocityFAP2<<6641>>.
\begin<<6704>>tex2html_deferred<<6704>>\par\end<<6705>>tex2html_deferred<<6705>>
By analysing the results, it becomes abundantly clear that velocity method 1 is by far the superior method for moving in the problem space. In each of the results, when comparing end fitness values produced by algorithm variants that use method 1 one can easily come to the conclusion that method 1 performs better than method 2.
\begin<<6706>>tex2html_deferred<<6706>>\par\end<<6707>>tex2html_deferred<<6707>>
As discussed in chapter~\ref<<6642>>chpt:psoapplicationFAP<<6642>>, method 1 uses a stage-based approach when applying the velocity function whereas method 2 applies the velocity function as is without it being broken up. Based on the results, using a stage-based approach to apply the velocity function is far better than applying the velocity equation directly to the transceiver in the plan.
\begin<<6708>>tex2html_deferred<<6708>>\par\end<<6709>>tex2html_deferred<<6709>>
Method 1 works by moving the whole swarm through to each stage before applying the next stage in the velocity equation. Thus after each stage, the whole swarm is at the same phase of the equation which keeps the swarm structured.
\begin<<6710>>tex2html_deferred<<6710>>\par\end<<6711>>tex2html_deferred<<6711>>
With method 2, the whole velocity equation is applied to whatever value is exposed to be operated on. Thus when method 2 moves a particle the frequency plan is moved piece by piece to some destination in the problem space.
\begin<<6712>>tex2html_deferred<<6712>>\par\end<<6713>>tex2html_deferred<<6713>>
By applying the velocity equation it is difficult to control the algorithm search process. With the FAP PSO control is necessary as there are various constraints which must not only be avoided but also adhered to for the generated plan to be usable. With method 2 adding domain knowledge is difficult, since after the velocity equation has been calculated the particle is very close to being moved to a new position. All that still needs to be done, before a particle is moved, is to apply inertia, which means there is a little check that can be done to ensure that all the frequency values are within acceptable bounds.
\begin<<6714>>tex2html_deferred<<6714>>\par\end<<6715>>tex2html_deferred<<6715>>
By breaking the velocity equation up into smaller parts (stages) using method 1 the algorithm is able to direct and ensure that the swarm is moving in the general direction of valid frequency allocations.
\begin<<6716>>tex2html_deferred<<6716>>\par\end<<6717>>tex2html_deferred<<6717>>
Also the algorithm is able to embed domain knowledge earlier into the calculation of the velocity and is therefore able to intercept early on movements that will result in invalid frequency allocations at each stage of the velocity equation.
\begin<<6718>>tex2html_deferred<<6718>>\par\end<<6719>>tex2html_deferred<<6719>>
\subsection<<6643>>Different Global Schemes<<6643>>
\label<<6644>>sec:diffglobalschemes<<6644>>
In the previous chapter three global selection schemes were identified. The first global selection scheme uses the standard PSO selection and the particle with the best fitness is the global best. This scheme is called ``Standard GBest''.
\begin<<6720>>tex2html_deferred<<6720>>\par\end<<6721>>tex2html_deferred<<6721>>
As discussed in section~\ref<<6645>>sec:buildglobalbest<<6645>>, using the standard gbest selection scheme is not preferable as it can lead to the swarm losing out on good frequency allocations due to overshadowing of frequencies\begin<<6722>>tex2html_deferred<<6722>>\footnote<<6653>>Overshadowing is discussed in chapter~\ref<<6646>>chpt:psoapplicationFAP<<6646>><<6653>>\end<<6723>>tex2html_deferred<<6723>>.
\begin<<6724>>tex2html_deferred<<6724>>\par\end<<6725>>tex2html_deferred<<6725>>
Even with overshadowing the standard global scheme does not produce bad results, which seems to indicate that overshadowing of frequency allocations does not impact the frequency plans as significantly as thought initially.
\begin<<6726>>tex2html_deferred<<6726>>\par\end<<6727>>tex2html_deferred<<6727>>
In addition to the standard gbest selection scheme, two other selection schemes were tested. It is actually incorrect to call these schemes selection schemes of gbest, since they build global best rather than select them.
\begin<<6728>>tex2html_deferred<<6728>>\par\end<<6729>>tex2html_deferred<<6729>>
By far the worst performing scheme is where the global best is built from transceivers. In every benchmark performed where this scheme was paired with a velocity method and population size, the algorithm was simply not able to produce any relatively good solutions. All possible solutions had high interference values, making them undesirable.
\begin<<6730>>tex2html_deferred<<6730>>\par\end<<6731>>tex2html_deferred<<6731>>
The bad performance of the build from transceivers scheme can be attributed to the granularity it uses to build a global best. As outlined in section~\ref<<6647>>sec:buildglobalbest<<6647>> the scheme only considers the interference generated by a single frequency allocated to a transceiver. This would have worked well if there were some sort of guarantee that a particular transceiver would only be interfered with by one other transceiver.
\begin<<6732>>tex2html_deferred<<6732>>\par\end<<6733>>tex2html_deferred<<6733>>
In reality and in the Siemens4 benchmarks this is definitely not the case. More often than not, transceivers are interfered with by more than one other transceiver. Thus by only concentrating on a single case-by-case basis of frequencies allocated to transceivers, the scheme is discarding all other possible interferences. 
\begin<<6734>>tex2html_deferred<<6734>>\par\end<<6735>>tex2html_deferred<<6735>>
It might select a frequency at one point as the best, since in that scenario, the interference generated with the only other transceiver that is considered at that point is low. But this particular frequency is too close on the spectrum to another frequency allocated to some other transceiver that also interferes. Due to the algorithm only considering individual cases, this potential interference with the other transceiver will not be noticed by the algorithm and it will go ahead in selecting the frequency as the best for the transceiver.
\begin<<6736>>tex2html_deferred<<6736>>\par\end<<6737>>tex2html_deferred<<6737>>
By analysing the results produced by the various FAP PSO algorithms, it can be concluded that the best global best selection scheme is by far the one in which cells are used to build a global best. With the cell selection scheme, the algorithm does not suffer the pitfall that is the reason for the transceiver gbest building scheme's bad performance.
\begin<<6738>>tex2html_deferred<<6738>>\par\end<<6739>>tex2html_deferred<<6739>>
As discussed the build from cells scheme uses cells to build a gbest, and thus each cell stores the interference that the frequencies allocated to its transceivers generate by interfering with other cells. As a cell interferes with other cells, the interference generated is added to the cell causing the interference.
\begin<<6740>>tex2html_deferred<<6740>>\par\end<<6741>>tex2html_deferred<<6741>>
After the PSO has calculated the fitness of all positions, each cell will contain the interference it personally has caused throughout the network to other cells. A cell with low interference means the frequencies that have been allocated to this particular cell are the best combination which causes the least amount of interference. Therefore, with the build gbest from cells scheme, the algorithm is able to make informed choices when selecting a cell to be included in the global best. 
\subsection<<6648>>Population Size<<6648>>
As discussed in chapter~\ref<<6649>>chpt:swarm<<6649>> the population parameter of the PSO is a sensitive parameter. For problems with big search spaces, it is better to have a large population. A large population increases diversity, meaning more particles occupy different positions in the problem space and hence the space is better explored, which internally increases the likelyhood of finding a better solution. Thus, in the results the population size was also varied.
\begin<<6742>>tex2html_deferred<<6742>>\par\end<<6743>>tex2html_deferred<<6743>>
In the results using a larger population did not significantly improve the possible solutions. In only one benchmark, namely Siemens2, the algorithm was able to produce a better possible solution than an algorithm that used a lower population size. In Siemens1, Siemens3 and Siemens4 the algorithm using a lower population was able to produce the best overall results.
\begin<<6744>>tex2html_deferred<<6744>>\par\end<<6745>>tex2html_deferred<<6745>>
Due to the complexity of the FAP it is difficult to use the PSO with a large population. The algorithm's efficiency greatly decreased with the increase in population, taking significantly longer to iterate through the same number of iterations as the algorithms with lower populations. The decrease in efficiency was not unexpected due to the function evaluations, movements and considerations increasing fivefold over the lower population size. What was unexpected was the degree to which the efficiency degraded.
\section<<6650>>Summary<<6650>>
In this chapter the results produced by the algorithm discussed in chapter~\ref<<6651>>chpt:psoapplicationFAP<<6651>> were presented. The FAP PSO algorithm was applied to four COST 259 benchmarks namely Siemens1, Siemens2, Siemens3 and Siemens4. These four benchmarks were discussed in detail in chapter~\ref<<6652>>chpt:fap<<6652>>. For each of the benchmarks, 12 different variants of the FAP PSO algorithm were tested. Each variant used a different velocity function, global best selection scheme or population size. The chapter concluded with critical analyses of each of the different algorithms developed in this study to enable the PSO to operate in the FAP space.
<tex2html_endfile>#./chpt8.tex#
